name: Build project

on:
  push:
   branches: [ release ]
  pull_request:
    branches: [ release ]
  #schedule:
   # - cron: "0 2 * * *"
  #[push, pull_request]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          # - StandaloneWindows # Build a Windows standalone.
          # - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          - Android # Build an Android .apk standalone app.
          # - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H+8-%M')"
          
      - name: Zip Binary
        run: zip -r ProductName_${{ matrix.targetPlatform }}_${{ steps.date.outputs.date }}.zip build/${{ matrix.targetPlatform }}/*

      - name: Create GitHub release
        id: create_release
  #       if: steps.version_check.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: V-${{ steps.date.outputs.date }}
          release_name: V-${{ steps.date.outputs.date }}
          body: |
            # Changelog
            Release type: V-${{ steps.date.outputs.date }}
          prerelease: false
        
      #- name: Get release
       # id: get_release
        # uses: bruceadams/get-release@v1.2.3
       # env:
        # GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          #upload_url: ${{ steps.get_release.outputs.upload_url }}
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./ProductName_${{ matrix.targetPlatform }}_${{ steps.date.outputs.date }}.zip
          asset_name: ProductName_${{ matrix.targetPlatform }}_${{ steps.date.outputs.date }}.zip
          asset_content_type: application/zip
